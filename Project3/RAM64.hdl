// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load , sel=address[3..5] , a=selectedA , b=selectedB , c=selectedC , d=selectedD , e=selectedE , f=selectedF , g=selectedG , h=selectedH );

    RAM8(in=in , load=selectedA , address=address[0..2] , out=ram8A );
    RAM8(in=in , load=selectedB , address=address[0..2] , out=ram8B );
    RAM8(in=in , load=selectedC , address=address[0..2] , out=ram8C );
    RAM8(in=in , load=selectedD , address=address[0..2] , out=ram8D );
    RAM8(in=in , load=selectedE , address=address[0..2] , out=ram8E );
    RAM8(in=in , load=selectedF , address=address[0..2] , out=ram8F );
    RAM8(in=in , load=selectedG , address=address[0..2] , out=ram8G );
    RAM8(in=in , load=selectedH , address=address[0..2] , out=ram8H );

    Mux8Way16(a=ram8A, b=ram8B, c=ram8C, d=ram8D, e=ram8E, f=ram8F, g=ram8G, h=ram8H, sel=address[3..5], out=out);
}